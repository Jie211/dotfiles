# vim:ft=zplug
# if zplug is not installed, automatically clone it and reload shell
if [[ ! -d ~/.zplug ]]; then
  echo "zplug is not installed in this machine."
  echo "Installing zplug..."
  echo ""
  read "ZPLUG_SUDO_PASSWORD?## Need you sudo pw to install fzy, so input your sudo pw: "
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update
fi

if [[ ! -d ~/.tmux/plugins/tpm  ]]; then
  echo "TPM is not installed in this machine."
  echo "Installing TPM///"
  echo ""
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

source ~/.zplug/init.zsh

zplug "yous/vanilli.sh"

zplug "zsh-users/zsh-syntax-highlighting", defer:2

zplug "b4b4r07/zsh-vimode-visual", use:"*.zsh", defer:3

zplug "zsh-users/zsh-history-substring-search", defer:3

zplug "zsh-users/zsh-completions"

zplug "glidenote/hub-zsh-completion"

zplug "Valodim/zsh-curl-completion"

zplug "plugins/git", from:oh-my-zsh

zplug "jhawthorn/fzy", \
  as:command, \
  hook-build:"make && sudo make install"

zplug "monochromegane/the_platinum_searcher", \
  as:command, \
  from:gh-r, \
  rename-to:"pt", \
  frozen:1
if [[ ! -d ~/.ptconfig.toml ]]; then
  echo "color = true" > ~/.ptconfig.toml
fi

zplug "b4b4r07/enhancd", use:init.sh

zplug "b4b4r07/zsh-history-enhanced"

###############
# function
###############
has() {
  type "${1:?too few arguments}" &>/dev/null
}

###############
# theme
###############
zplug "b4b4r07/ultimate", as:theme
if zplug check "b4b4r07/ultimate"; then
  zstyle ':ultimate:prompt:path' mode 'shortpath'
fi

################
# key bind
################
# Vim-like keybind as default
bindkey -v

# unset ctrl-j
bindkey -r '^j' # Ctrl-j
bindkey -r '^J' # Ctrl-j
# Vim-like escaping jj keybind
bindkey -M viins 'jj' vi-cmd-mode
# Add emacs-like keybind to viins mode
bindkey -M viins '^F'  forward-char
bindkey -M viins '^B'  backward-char
bindkey -M viins '^A'  beginning-of-line
bindkey -M viins '^E'  end-of-line
bindkey -M viins '^K'  kill-line
bindkey -M viins '^Y'  yank
bindkey -M viins '^W'  backward-kill-word
bindkey -M viins '^U'  backward-kill-line
bindkey -M viins '^H'  backward-delete-char
bindkey -M viins '^?'  backward-delete-char
bindkey -M viins '^G'  send-break
bindkey -M viins '^D'  delete-char-or-list
bindkey -M vicmd '^A'  beginning-of-line
bindkey -M vicmd '^E'  end-of-line
bindkey -M vicmd '^K'  kill-line
bindkey -M vicmd '^P'  up-line-or-history
bindkey -M vicmd '^N'  down-line-or-history
bindkey -M vicmd '^Y'  yank
bindkey -M vicmd '^W'  backward-kill-word
bindkey -M vicmd '^U'  backward-kill-line
bindkey -M vicmd '/'   vi-history-search-forward
bindkey -M vicmd '?'   vi-history-search-backward
bindkey -M vicmd 'gg' beginning-of-line
bindkey -M vicmd 'G'  end-of-line
setopt pushd_ignore_dups

# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history
# メモリ上に保存される件数（検索できる件数）
HISTSIZE=100000
# ファイルに保存される件数
SAVEHIST=100000
export INTERACTIVE_FILTER="fzy"
# rootは履歴を残さないようにする
if [ $UID = 0 ]; then
  unset HISTFILE
  SAVEHIST=0
fi
################
# zplug
################

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
  zplug install
fi

###############
# zsh-history-substring-search
###############
if zplug check "zsh-users/zsh-history-substring-search"; then
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down
fi

##############
# zstyle
##############
# Important
zstyle ':completion:*:default' menu select=2
# Completing Groping
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:descriptions' format '%F{yellow}Completing %B%d%b%f'
zstyle ':completion:*' group-name ''
# Completing misc
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' verbose yes
zstyle ':completion:*' completer _expand _complete _match _prefix _approximate _list _history
zstyle ':completion:*:*files' ignored-patterns '*?.o' '*?~' '*\#'
zstyle ':completion:*' use-cache true
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters
# Directory
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# default: --
zstyle ':completion:*' list-separator '-->'
zstyle ':completion:*:manuals' separate-sections true
# Menu select
zmodload -i zsh/complist
bindkey -M menuselect '^h' vi-backward-char
bindkey -M menuselect '^j' vi-down-line-or-history
bindkey -M menuselect '^k' vi-up-line-or-history
bindkey -M menuselect '^l' vi-forward-char
#bindkey -M menuselect '^k' accept-and-infer-next-history
autoload -Uz cdr
autoload -Uz history-search-end
autoload -Uz modify-current-argument
autoload -Uz smart-insert-last-word
autoload -Uz terminfo
autoload -Uz vcs_info
autoload -Uz zcalc
autoload -Uz zmv
autoload -Uz run-help-git
autoload -Uz run-help-svk
autoload -Uz run-help-svn
autoload -Uz add-zsh-hook
autoload -Uz colors && colors
autoload -Uz compinit && compinit -u
autoload -Uz is-at-least


###############
# zsh-enhanced
###############
export ENHANCD_COMMAND=cd
export ENHANCD_FILTER=fzy

###############
# zsh-history-enhanced
###############
#if zplug check "b4b4r07/zsh-history-enhanced"; then
if zplug check "b4b4r07/history"; then
  export ZSH_HISTORY_FILE="$HOME/.zsh_history.db"
  bindkey -r '^j' # Ctrl-j
  bindkey -r '^J' # Ctrl-j
  ZSH_HISTORY_FILTER="fzy"
  ZSH_HISTORY_KEYBIND_GET_BY_DIR="^r"
  ZSH_HISTORY_KEYBIND_GET_ALL="^r^a"
  ZSH_HISTORY_KEYBIND_ARROW_UP="^p"
  ZSH_HISTORY_KEYBIND_ARROW_DOWN="^n"
fi

###############
# ls less 
###############
export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[00;44;37m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
export LESS='-R -f -X -i -P ?f%f:(stdin). ?lb%lb?L/%L.. [?eEOF:?pb%pb\%..]'
export LESSCHARSET='utf-8'

###############
# editor
###############
export EDITOR=vim
export CVSEDITOR="${EDITOR}"
export SVN_EDITOR="${EDITOR}"
export GIT_EDITOR="${EDITOR}"

###############
# LANGUAGE
###############
export LANGUAGE="en_US.UTF-8"
export LANG="${LANGUAGE}"
export LC_ALL="${LANGUAGE}"
export LC_CTYPE="${LANGUAGE}"


################
# system
################

export PATH="/usr/local/bin:/usr/local/lib:/usr/bin:/bin:/usr/sbin:/sbin"
export TERM="xterm-256color"
export XDG_CONFIG_HOME="$HOME/.config"

alias vi=vim

function loadlib() {
  lib=${1:?"You have to specify a library file"}
  if [ -f "$lib" ];then #ファイルの存在を確認
    . "$lib"
  fi
}

# $1 = type; 0 - both, 1 - tab, 2 - title
# rest = text
setTerminalText () {
    # echo works in bash & zsh
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

preexec() {
    mycmd=(${(s: :)${1}})
    echo -ne "\ek$(hostname|awk 'BEGIN{FS="."}{print $1}'):$mycmd[1]\e\\"
}

precmd() {
    echo -ne "\ek$(hostname|awk 'BEGIN{FS="."}{print $1}'):(-.-)Zzz\e\\"
}


loadlib ~/.zsh-local

zplug load --verbose
